{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAsBtC,SAASI,GAAcC,SAAEA,EAAQC,MAAEA,IACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA5BbT,EAAKC,KAAKgB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBACF,IAAIV,EAAQW,OAAOpB,EAAKI,WAAWiB,OAC/BC,EAAOF,OAAOpB,EAAKK,UAAUgB,OAC7BE,EAASH,OAAOpB,EAAKM,YAAYe,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCjB,EAAc,CAAEC,SAAUgB,EAAGf,MAAOA,IACjCgB,MAAKC,GAAU5B,EAAA6B,OAAOC,QAAQF,KAC9BG,OAAMC,GAAShC,EAAA6B,OAAOI,QAAQD,KACjCrB,GAASa,EAEXN,YAAW,KACThB,EAAKC,KAAK+B,OAAO,GAChBvB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delayInput.value);\n  let step = Number(refs.stepInput.value);\n  let amount = Number(refs.amountInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ position: i, delay: delay })\n      .then(result => Notify.success(result))\n      .catch(error => Notify.failure(error));\n    delay += step;\n  }\n  setTimeout(() => {\n    refs.form.reset();\n  }, delay);\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","Number","value","step","amount","i","then","result","Notify","success","catch","error","failure","reset"],"version":3,"file":"03-promises.eb20dcae.js.map"}